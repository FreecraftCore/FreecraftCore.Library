using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="GossipMenuItem"/>
    /// </summary>
    public sealed partial class GossipMenuItem_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<GossipMenuItem_AutoGeneratedTemplateSerializerStrategy, GossipMenuItem>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(GossipMenuItem value, Span<byte> buffer, ref int offset)
        {
            //Type: GossipMenuItem Field: 1 Name: EntryId Type: Int32;
            value.EntryId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: GossipMenuItem Field: 2 Name: MenuIconId Type: Byte;
            value.MenuIconId = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: GossipMenuItem Field: 3 Name: IsCoded Type: Boolean;
            value.IsCoded = GenericTypePrimitiveSerializerStrategy<Boolean>.Instance.Read(buffer, ref offset);
            //Type: GossipMenuItem Field: 4 Name: RequiredMoney Type: Int32;
            value.RequiredMoney = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: GossipMenuItem Field: 5 Name: MenuText Type: String;
            value.MenuText = TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Read(buffer, ref offset);
            //Type: GossipMenuItem Field: 6 Name: OptionalRequiredMoneyText Type: String;
            value.OptionalRequiredMoneyText = TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(GossipMenuItem value, Span<byte> buffer, ref int offset)
        {
            //Type: GossipMenuItem Field: 1 Name: EntryId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.EntryId, buffer, ref offset);
            //Type: GossipMenuItem Field: 2 Name: MenuIconId Type: Byte;
            BytePrimitiveSerializerStrategy.Instance.Write(value.MenuIconId, buffer, ref offset);
            //Type: GossipMenuItem Field: 3 Name: IsCoded Type: Boolean;
            GenericTypePrimitiveSerializerStrategy<Boolean>.Instance.Write(value.IsCoded, buffer, ref offset);
            //Type: GossipMenuItem Field: 4 Name: RequiredMoney Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.RequiredMoney, buffer, ref offset);
            //Type: GossipMenuItem Field: 5 Name: MenuText Type: String;
            TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Write(value.MenuText, buffer, ref offset);
            //Type: GossipMenuItem Field: 6 Name: OptionalRequiredMoneyText Type: String;
            TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Write(value.OptionalRequiredMoneyText, buffer, ref offset);
        }
    }
}