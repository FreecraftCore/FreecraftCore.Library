using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="AuraApplicationStateUpdate"/>
    /// </summary>
    public sealed partial class AuraApplicationStateUpdate_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<AuraApplicationStateUpdate_AutoGeneratedTemplateSerializerStrategy, AuraApplicationStateUpdate>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(AuraApplicationStateUpdate value, Span<byte> buffer, ref int offset)
        {
            //Type: AuraApplicationStateUpdate Field: 3 Name: Flags Type: AuraFlags;
            value.Flags = GenericPrimitiveEnumTypeSerializerStrategy<AuraFlags, Byte>.Instance.Read(buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 4 Name: CasterLevel Type: Byte;
            value.CasterLevel = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 5 Name: CounterAmount Type: Byte;
            value.CounterAmount = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 6 Name: CasterGuid Type: PackedGuid;
            if (value.HasCasterGuid)value.CasterGuid = CustomPackedGuidTypeSerializer.Instance.Read(buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 7 Name: MaximumAuraDuration Type: Int32;
            if (value.HasDuration)value.MaximumAuraDuration = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 8 Name: CurrentAuraDuration Type: Int32;
            if (value.HasDuration)value.CurrentAuraDuration = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(AuraApplicationStateUpdate value, Span<byte> buffer, ref int offset)
        {
            //Type: AuraApplicationStateUpdate Field: 3 Name: Flags Type: AuraFlags;
            GenericPrimitiveEnumTypeSerializerStrategy<AuraFlags, Byte>.Instance.Write(value.Flags, buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 4 Name: CasterLevel Type: Byte;
            BytePrimitiveSerializerStrategy.Instance.Write(value.CasterLevel, buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 5 Name: CounterAmount Type: Byte;
            BytePrimitiveSerializerStrategy.Instance.Write(value.CounterAmount, buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 6 Name: CasterGuid Type: PackedGuid;
            if (value.HasCasterGuid)CustomPackedGuidTypeSerializer.Instance.Write(value.CasterGuid, buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 7 Name: MaximumAuraDuration Type: Int32;
            if (value.HasDuration)GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.MaximumAuraDuration, buffer, ref offset);
            //Type: AuraApplicationStateUpdate Field: 8 Name: CurrentAuraDuration Type: Int32;
            if (value.HasDuration)GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.CurrentAuraDuration, buffer, ref offset);
        }
    }
}