using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;
namespace FreecraftCore
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class SMSG_MONSTER_MOVE_Payload
    {
        public override Type SerializableType => typeof(SMSG_MONSTER_MOVE_Payload);
        public override GamePacketPayload Read(Span<byte> buffer, ref int offset)
        {
            SMSG_MONSTER_MOVE_Payload_AutoGeneratedTemplateSerializerStrategy.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public override void Write(GamePacketPayload value, Span<byte> buffer, ref int offset)
        {
            SMSG_MONSTER_MOVE_Payload_AutoGeneratedTemplateSerializerStrategy.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="SMSG_MONSTER_MOVE_Payload"/>
    /// </summary>
    public sealed partial class SMSG_MONSTER_MOVE_Payload_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<SMSG_MONSTER_MOVE_Payload_AutoGeneratedTemplateSerializerStrategy, SMSG_MONSTER_MOVE_Payload>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(SMSG_MONSTER_MOVE_Payload value, Span<byte> buffer, ref int offset)
        {
            //Type: GamePacketPayload Field: 1 Name: OperationCode Type: NetworkOperationCode;
            value.OperationCode = GenericPrimitiveEnumTypeSerializerStrategy<NetworkOperationCode, UInt16>.Instance.Read(buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 1 Name: MonsterGuid Type: PackedGuid;
            value.MonsterGuid = CustomPackedGuidTypeSerializer.Instance.Read(buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 2 Name: Unk1 Type: Byte;
            value.Unk1 = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 3 Name: InitialMovePoint Type: Vector3;
            value.InitialMovePoint = Vector3_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 4 Name: SplineId Type: Int32;
            value.SplineId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 5 Name: MoveInfo Type: MonsterMoveInfo;
            value.MoveInfo = MonsterMoveInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 6 Name: OptionalSplineInformation Type: MonsterSplineInfo;
            if (value.IsMovePacket)value.OptionalSplineInformation = MonsterSplineInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(SMSG_MONSTER_MOVE_Payload value, Span<byte> buffer, ref int offset)
        {
            //Type: GamePacketPayload Field: 1 Name: OperationCode Type: NetworkOperationCode;
            GenericPrimitiveEnumTypeSerializerStrategy<NetworkOperationCode, UInt16>.Instance.Write(value.OperationCode, buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 1 Name: MonsterGuid Type: PackedGuid;
            CustomPackedGuidTypeSerializer.Instance.Write(value.MonsterGuid, buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 2 Name: Unk1 Type: Byte;
            BytePrimitiveSerializerStrategy.Instance.Write(value.Unk1, buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 3 Name: InitialMovePoint Type: Vector3;
            Vector3_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.InitialMovePoint, buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 4 Name: SplineId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.SplineId, buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 5 Name: MoveInfo Type: MonsterMoveInfo;
            MonsterMoveInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.MoveInfo, buffer, ref offset);
            //Type: SMSG_MONSTER_MOVE_Payload Field: 6 Name: OptionalSplineInformation Type: MonsterSplineInfo;
            if (value.IsMovePacket)MonsterSplineInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.OptionalSplineInformation, buffer, ref offset);
        }
    }
}