using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="SpellEffectData"/>
    /// </summary>
    public sealed partial class SpellEffectData_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<SpellEffectData_AutoGeneratedTemplateSerializerStrategy, SpellEffectData>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(SpellEffectData value, Span<byte> buffer, ref int offset)
        {
            //Type: SpellEffectData Field: 55 Name: Effect Type: SpellEffectDataChunk;
            value.Effect = SpellEffectDataChunk_SpellEffect_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 56 Name: EffectDieSides Type: SpellEffectDataChunk;
            value.EffectDieSides = SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 57 Name: EffectRealPointsPerLevel Type: SpellEffectDataChunk;
            value.EffectRealPointsPerLevel = SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 58 Name: EffectBasePoints Type: SpellEffectDataChunk;
            value.EffectBasePoints = SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 59 Name: EffectMechanic Type: SpellEffectDataChunk;
            value.EffectMechanic = SpellEffectDataChunk_SpellMechanic_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 60 Name: EffectImplicitTargetA Type: SpellEffectDataChunk;
            value.EffectImplicitTargetA = SpellEffectDataChunk_SpellTargetType_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 61 Name: EffectImplicitTargetB Type: SpellEffectDataChunk;
            value.EffectImplicitTargetB = SpellEffectDataChunk_SpellTargetType_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 62 Name: EffectRadiusIndex Type: SpellEffectDataChunk;
            value.EffectRadiusIndex = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 63 Name: EffectApplyAuraName Type: SpellEffectDataChunk;
            value.EffectApplyAuraName = SpellEffectDataChunk_AuraType_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 64 Name: EffectAmplitude Type: SpellEffectDataChunk;
            value.EffectAmplitude = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 65 Name: EffectMultipleValue Type: SpellEffectDataChunk;
            value.EffectMultipleValue = SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 66 Name: EffectChainTarget Type: SpellEffectDataChunk;
            value.EffectChainTarget = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 67 Name: EffectItemType Type: SpellEffectDataChunk;
            value.EffectItemType = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 68 Name: EffectMiscValue Type: SpellEffectDataChunk;
            value.EffectMiscValue = SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 69 Name: EffectMiscValueB Type: SpellEffectDataChunk;
            value.EffectMiscValueB = SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 70 Name: EffectTriggerSpell Type: SpellEffectDataChunk;
            value.EffectTriggerSpell = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 71 Name: EffectPointsPerComboPoint Type: SpellEffectDataChunk;
            value.EffectPointsPerComboPoint = SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 72 Name: EffectSpellClassMaskA Type: SpellEffectDataChunk;
            value.EffectSpellClassMaskA = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 73 Name: EffectSpellClassMaskB Type: SpellEffectDataChunk;
            value.EffectSpellClassMaskB = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEffectData Field: 74 Name: EffectSpellClassMaskC Type: SpellEffectDataChunk;
            value.EffectSpellClassMaskC = SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(SpellEffectData value, Span<byte> buffer, ref int offset)
        {
            //Type: SpellEffectData Field: 55 Name: Effect Type: SpellEffectDataChunk;
            SpellEffectDataChunk_SpellEffect_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.Effect, buffer, ref offset);
            //Type: SpellEffectData Field: 56 Name: EffectDieSides Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectDieSides, buffer, ref offset);
            //Type: SpellEffectData Field: 57 Name: EffectRealPointsPerLevel Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectRealPointsPerLevel, buffer, ref offset);
            //Type: SpellEffectData Field: 58 Name: EffectBasePoints Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectBasePoints, buffer, ref offset);
            //Type: SpellEffectData Field: 59 Name: EffectMechanic Type: SpellEffectDataChunk;
            SpellEffectDataChunk_SpellMechanic_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectMechanic, buffer, ref offset);
            //Type: SpellEffectData Field: 60 Name: EffectImplicitTargetA Type: SpellEffectDataChunk;
            SpellEffectDataChunk_SpellTargetType_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectImplicitTargetA, buffer, ref offset);
            //Type: SpellEffectData Field: 61 Name: EffectImplicitTargetB Type: SpellEffectDataChunk;
            SpellEffectDataChunk_SpellTargetType_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectImplicitTargetB, buffer, ref offset);
            //Type: SpellEffectData Field: 62 Name: EffectRadiusIndex Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectRadiusIndex, buffer, ref offset);
            //Type: SpellEffectData Field: 63 Name: EffectApplyAuraName Type: SpellEffectDataChunk;
            SpellEffectDataChunk_AuraType_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectApplyAuraName, buffer, ref offset);
            //Type: SpellEffectData Field: 64 Name: EffectAmplitude Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectAmplitude, buffer, ref offset);
            //Type: SpellEffectData Field: 65 Name: EffectMultipleValue Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectMultipleValue, buffer, ref offset);
            //Type: SpellEffectData Field: 66 Name: EffectChainTarget Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectChainTarget, buffer, ref offset);
            //Type: SpellEffectData Field: 67 Name: EffectItemType Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectItemType, buffer, ref offset);
            //Type: SpellEffectData Field: 68 Name: EffectMiscValue Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectMiscValue, buffer, ref offset);
            //Type: SpellEffectData Field: 69 Name: EffectMiscValueB Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Int32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectMiscValueB, buffer, ref offset);
            //Type: SpellEffectData Field: 70 Name: EffectTriggerSpell Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectTriggerSpell, buffer, ref offset);
            //Type: SpellEffectData Field: 71 Name: EffectPointsPerComboPoint Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectPointsPerComboPoint, buffer, ref offset);
            //Type: SpellEffectData Field: 72 Name: EffectSpellClassMaskA Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectSpellClassMaskA, buffer, ref offset);
            //Type: SpellEffectData Field: 73 Name: EffectSpellClassMaskB Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectSpellClassMaskB, buffer, ref offset);
            //Type: SpellEffectData Field: 74 Name: EffectSpellClassMaskC Type: SpellEffectDataChunk;
            SpellEffectDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.EffectSpellClassMaskC, buffer, ref offset);
        }
    }
}