using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="SpellEntry<String>"/>
    /// </summary>
    public sealed partial class SpellEntry_String_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<SpellEntry_String_AutoGeneratedTemplateSerializerStrategy, SpellEntry<String>>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(SpellEntry<String> value, Span<byte> buffer, ref int offset)
        {
            //Type: SpellEntry Field: 1 Name: SpellId Type: Int32;
            value.SpellId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 2 Name: Category Type: UInt32;
            value.Category = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 3 Name: Dispel Type: UInt32;
            value.Dispel = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 4 Name: Mechanic Type: SpellMechanic;
            value.Mechanic = GenericPrimitiveEnumTypeSerializerStrategy<SpellMechanic, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 5 Name: Attributes Type: SpellAtribute;
            value.Attributes = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtribute, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 6 Name: AttributesEx Type: SpellAtributeEx;
            value.AttributesEx = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 7 Name: AttributesEx2 Type: SpellAtributeEx2;
            value.AttributesEx2 = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx2, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 8 Name: AttributesEx3 Type: SpellAtributeEx3;
            value.AttributesEx3 = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx3, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 9 Name: AttributesEx4 Type: SpellAtributeEx4;
            value.AttributesEx4 = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx4, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 10 Name: AttributesEx5 Type: SpellAtributeEx5;
            value.AttributesEx5 = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx5, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 11 Name: AttributesEx6 Type: SpellAtributeEx6;
            value.AttributesEx6 = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx6, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 12 Name: AttributesEx7 Type: SpellAtributeEx7;
            value.AttributesEx7 = GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx7, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 13 Name: Stances Type: UInt64;
            value.Stances = GenericTypePrimitiveSerializerStrategy<UInt64>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 14 Name: StancesNot Type: UInt64;
            value.StancesNot = GenericTypePrimitiveSerializerStrategy<UInt64>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 15 Name: Targets Type: UInt32;
            value.Targets = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 16 Name: TargetCreatureType Type: CreatureTypeMask;
            value.TargetCreatureType = GenericPrimitiveEnumTypeSerializerStrategy<CreatureTypeMask, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 17 Name: RequiresSpellFocus Type: UInt32;
            value.RequiresSpellFocus = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 18 Name: FacingCasterFlags Type: UInt32;
            value.FacingCasterFlags = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 19 Name: CasterAuraState Type: AuraState;
            value.CasterAuraState = GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 20 Name: TargetAuraState Type: AuraState;
            value.TargetAuraState = GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 21 Name: CasterAuraStateNot Type: AuraState;
            value.CasterAuraStateNot = GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 22 Name: TargetAuraStateNot Type: AuraState;
            value.TargetAuraStateNot = GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 23 Name: CasterAuraSpell Type: UInt32;
            value.CasterAuraSpell = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 24 Name: TargetAuraSpell Type: UInt32;
            value.TargetAuraSpell = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 25 Name: ExcludeCasterAuraSpell Type: UInt32;
            value.ExcludeCasterAuraSpell = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 26 Name: ExcludeTargetAuraSpell Type: UInt32;
            value.ExcludeTargetAuraSpell = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 27 Name: CastingTimeIndex Type: UInt32;
            value.CastingTimeIndex = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 28 Name: RecoveryTime Type: UInt32;
            value.RecoveryTime = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 29 Name: CategoryRecoveryTime Type: UInt32;
            value.CategoryRecoveryTime = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 30 Name: InterruptFlags Type: SpellInteruptFlags;
            value.InterruptFlags = GenericPrimitiveEnumTypeSerializerStrategy<SpellInteruptFlags, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 31 Name: AuraInterruptFlags Type: SpellAuraInterruptFlags;
            value.AuraInterruptFlags = GenericPrimitiveEnumTypeSerializerStrategy<SpellAuraInterruptFlags, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 32 Name: ChannelInterruptFlags Type: SpellChannelInterruptFlags;
            value.ChannelInterruptFlags = GenericPrimitiveEnumTypeSerializerStrategy<SpellChannelInterruptFlags, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 33 Name: ProcFlags Type: ProcFlags;
            value.ProcFlags = GenericPrimitiveEnumTypeSerializerStrategy<ProcFlags, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 34 Name: ProcChance Type: UInt32;
            value.ProcChance = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 35 Name: ProcCharges Type: UInt32;
            value.ProcCharges = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 36 Name: MaxLevel Type: UInt32;
            value.MaxLevel = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 37 Name: BaseLevel Type: UInt32;
            value.BaseLevel = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 38 Name: SpellLevel Type: UInt32;
            value.SpellLevel = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 39 Name: DurationIndex Type: UInt32;
            value.DurationIndex = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 40 Name: PowerType Type: SpellCostPower;
            value.PowerType = GenericPrimitiveEnumTypeSerializerStrategy<SpellCostPower, UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 41 Name: ManaCost Type: UInt32;
            value.ManaCost = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 42 Name: ManaCostPerlevel Type: UInt32;
            value.ManaCostPerlevel = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 43 Name: ManaPerSecond Type: UInt32;
            value.ManaPerSecond = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 44 Name: ManaPerSecondPerLevel Type: UInt32;
            value.ManaPerSecondPerLevel = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 45 Name: RangeIndex Type: UInt32;
            value.RangeIndex = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 46 Name: Speed Type: Single;
            value.Speed = GenericTypePrimitiveSerializerStrategy<Single>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 47 Name: ModalNextSpell Type: UInt32;
            value.ModalNextSpell = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 48 Name: StackAmount Type: UInt32;
            value.StackAmount = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 49 Name: ReagentsRequired Type: RequiredReagentData;
            value.ReagentsRequired = RequiredReagentData_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 52 Name: EquippedItemClass Type: ItemClassType;
            value.EquippedItemClass = GenericPrimitiveEnumTypeSerializerStrategy<ItemClassType, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 53 Name: EquippedItemSubClassMask Type: Int32;
            value.EquippedItemSubClassMask = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 54 Name: EquippedItemInventoryTypeMask Type: InventoryTypeMask;
            value.EquippedItemInventoryTypeMask = GenericPrimitiveEnumTypeSerializerStrategy<InventoryTypeMask, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 55 Name: SpellEffectInformation Type: SpellEffectData;
            value.SpellEffectInformation = SpellEffectData_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 75 Name: SpellVisual Type: SpellVisualData;
            value.SpellVisual = SpellVisualData_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 76 Name: SpellIconID Type: UInt32;
            value.SpellIconID = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 77 Name: ActiveIconID Type: UInt32;
            value.ActiveIconID = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 78 Name: SpellPriority Type: UInt32;
            value.SpellPriority = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 79 Name: SpellName Type: LocalizedStringDBC;
            value.SpellName = LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 81 Name: Rank Type: LocalizedStringDBC;
            value.Rank = LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 83 Name: Description Type: LocalizedStringDBC;
            value.Description = LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 85 Name: ToolTip Type: LocalizedStringDBC;
            value.ToolTip = LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 87 Name: ManaCostPercentage Type: UInt32;
            value.ManaCostPercentage = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 88 Name: StartRecoveryCategory Type: UInt32;
            value.StartRecoveryCategory = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 89 Name: StartRecoveryTime Type: UInt32;
            value.StartRecoveryTime = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 90 Name: MaxTargetLevel Type: UInt32;
            value.MaxTargetLevel = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 91 Name: SpellFamilyName Type: SpellFamilyName;
            value.SpellFamilyName = GenericPrimitiveEnumTypeSerializerStrategy<SpellFamilyName, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 92 Name: SpellFamilyFlags Type: Flags96;
            value.SpellFamilyFlags = Flags96_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 93 Name: MaxAffectedTargets Type: UInt32;
            value.MaxAffectedTargets = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 94 Name: DmgClass Type: SpellDamageClassType;
            value.DmgClass = GenericPrimitiveEnumTypeSerializerStrategy<SpellDamageClassType, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 95 Name: PreventionType Type: SpellPreventionType;
            value.PreventionType = GenericPrimitiveEnumTypeSerializerStrategy<SpellPreventionType, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 96 Name: StanceBarOrder Type: UInt32;
            value.StanceBarOrder = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 97 Name: DmgMultiplier Type: SpellEffectDataChunk;
            value.DmgMultiplier = SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 98 Name: MinFactionId Type: UInt32;
            value.MinFactionId = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 99 Name: MinReputation Type: UInt32;
            value.MinReputation = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 100 Name: RequiredAuraVision Type: UInt32;
            value.RequiredAuraVision = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 101 Name: TotemCategory Type: SpellTotemDataChunk;
            value.TotemCategory = SpellTotemDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 102 Name: AreaGroupId Type: Int32;
            value.AreaGroupId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 103 Name: SchoolMask Type: SpellSchoolMask;
            value.SchoolMask = GenericPrimitiveEnumTypeSerializerStrategy<SpellSchoolMask, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 104 Name: RuneCostID Type: UInt32;
            value.RuneCostID = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 105 Name: SpellMissileID Type: UInt32;
            value.SpellMissileID = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 106 Name: PowerDisplayId Type: UInt32;
            value.PowerDisplayId = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 107 Name: DamageCoeficient Type: SpellEffectDataChunk;
            value.DamageCoeficient = SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 108 Name: SpellDescriptionVariableID Type: UInt32;
            value.SpellDescriptionVariableID = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: SpellEntry Field: 109 Name: SpellDifficultyId Type: UInt32;
            value.SpellDifficultyId = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(SpellEntry<String> value, Span<byte> buffer, ref int offset)
        {
            //Type: SpellEntry Field: 1 Name: SpellId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.SpellId, buffer, ref offset);
            //Type: SpellEntry Field: 2 Name: Category Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.Category, buffer, ref offset);
            //Type: SpellEntry Field: 3 Name: Dispel Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.Dispel, buffer, ref offset);
            //Type: SpellEntry Field: 4 Name: Mechanic Type: SpellMechanic;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellMechanic, Int32>.Instance.Write(value.Mechanic, buffer, ref offset);
            //Type: SpellEntry Field: 5 Name: Attributes Type: SpellAtribute;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtribute, UInt32>.Instance.Write(value.Attributes, buffer, ref offset);
            //Type: SpellEntry Field: 6 Name: AttributesEx Type: SpellAtributeEx;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx, UInt32>.Instance.Write(value.AttributesEx, buffer, ref offset);
            //Type: SpellEntry Field: 7 Name: AttributesEx2 Type: SpellAtributeEx2;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx2, UInt32>.Instance.Write(value.AttributesEx2, buffer, ref offset);
            //Type: SpellEntry Field: 8 Name: AttributesEx3 Type: SpellAtributeEx3;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx3, UInt32>.Instance.Write(value.AttributesEx3, buffer, ref offset);
            //Type: SpellEntry Field: 9 Name: AttributesEx4 Type: SpellAtributeEx4;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx4, UInt32>.Instance.Write(value.AttributesEx4, buffer, ref offset);
            //Type: SpellEntry Field: 10 Name: AttributesEx5 Type: SpellAtributeEx5;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx5, UInt32>.Instance.Write(value.AttributesEx5, buffer, ref offset);
            //Type: SpellEntry Field: 11 Name: AttributesEx6 Type: SpellAtributeEx6;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx6, UInt32>.Instance.Write(value.AttributesEx6, buffer, ref offset);
            //Type: SpellEntry Field: 12 Name: AttributesEx7 Type: SpellAtributeEx7;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAtributeEx7, UInt32>.Instance.Write(value.AttributesEx7, buffer, ref offset);
            //Type: SpellEntry Field: 13 Name: Stances Type: UInt64;
            GenericTypePrimitiveSerializerStrategy<UInt64>.Instance.Write(value.Stances, buffer, ref offset);
            //Type: SpellEntry Field: 14 Name: StancesNot Type: UInt64;
            GenericTypePrimitiveSerializerStrategy<UInt64>.Instance.Write(value.StancesNot, buffer, ref offset);
            //Type: SpellEntry Field: 15 Name: Targets Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.Targets, buffer, ref offset);
            //Type: SpellEntry Field: 16 Name: TargetCreatureType Type: CreatureTypeMask;
            GenericPrimitiveEnumTypeSerializerStrategy<CreatureTypeMask, Int32>.Instance.Write(value.TargetCreatureType, buffer, ref offset);
            //Type: SpellEntry Field: 17 Name: RequiresSpellFocus Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.RequiresSpellFocus, buffer, ref offset);
            //Type: SpellEntry Field: 18 Name: FacingCasterFlags Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.FacingCasterFlags, buffer, ref offset);
            //Type: SpellEntry Field: 19 Name: CasterAuraState Type: AuraState;
            GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Write(value.CasterAuraState, buffer, ref offset);
            //Type: SpellEntry Field: 20 Name: TargetAuraState Type: AuraState;
            GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Write(value.TargetAuraState, buffer, ref offset);
            //Type: SpellEntry Field: 21 Name: CasterAuraStateNot Type: AuraState;
            GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Write(value.CasterAuraStateNot, buffer, ref offset);
            //Type: SpellEntry Field: 22 Name: TargetAuraStateNot Type: AuraState;
            GenericPrimitiveEnumTypeSerializerStrategy<AuraState, Int32>.Instance.Write(value.TargetAuraStateNot, buffer, ref offset);
            //Type: SpellEntry Field: 23 Name: CasterAuraSpell Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.CasterAuraSpell, buffer, ref offset);
            //Type: SpellEntry Field: 24 Name: TargetAuraSpell Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.TargetAuraSpell, buffer, ref offset);
            //Type: SpellEntry Field: 25 Name: ExcludeCasterAuraSpell Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ExcludeCasterAuraSpell, buffer, ref offset);
            //Type: SpellEntry Field: 26 Name: ExcludeTargetAuraSpell Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ExcludeTargetAuraSpell, buffer, ref offset);
            //Type: SpellEntry Field: 27 Name: CastingTimeIndex Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.CastingTimeIndex, buffer, ref offset);
            //Type: SpellEntry Field: 28 Name: RecoveryTime Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.RecoveryTime, buffer, ref offset);
            //Type: SpellEntry Field: 29 Name: CategoryRecoveryTime Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.CategoryRecoveryTime, buffer, ref offset);
            //Type: SpellEntry Field: 30 Name: InterruptFlags Type: SpellInteruptFlags;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellInteruptFlags, UInt32>.Instance.Write(value.InterruptFlags, buffer, ref offset);
            //Type: SpellEntry Field: 31 Name: AuraInterruptFlags Type: SpellAuraInterruptFlags;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellAuraInterruptFlags, UInt32>.Instance.Write(value.AuraInterruptFlags, buffer, ref offset);
            //Type: SpellEntry Field: 32 Name: ChannelInterruptFlags Type: SpellChannelInterruptFlags;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellChannelInterruptFlags, UInt32>.Instance.Write(value.ChannelInterruptFlags, buffer, ref offset);
            //Type: SpellEntry Field: 33 Name: ProcFlags Type: ProcFlags;
            GenericPrimitiveEnumTypeSerializerStrategy<ProcFlags, Int32>.Instance.Write(value.ProcFlags, buffer, ref offset);
            //Type: SpellEntry Field: 34 Name: ProcChance Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ProcChance, buffer, ref offset);
            //Type: SpellEntry Field: 35 Name: ProcCharges Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ProcCharges, buffer, ref offset);
            //Type: SpellEntry Field: 36 Name: MaxLevel Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.MaxLevel, buffer, ref offset);
            //Type: SpellEntry Field: 37 Name: BaseLevel Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.BaseLevel, buffer, ref offset);
            //Type: SpellEntry Field: 38 Name: SpellLevel Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.SpellLevel, buffer, ref offset);
            //Type: SpellEntry Field: 39 Name: DurationIndex Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.DurationIndex, buffer, ref offset);
            //Type: SpellEntry Field: 40 Name: PowerType Type: SpellCostPower;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellCostPower, UInt32>.Instance.Write(value.PowerType, buffer, ref offset);
            //Type: SpellEntry Field: 41 Name: ManaCost Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ManaCost, buffer, ref offset);
            //Type: SpellEntry Field: 42 Name: ManaCostPerlevel Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ManaCostPerlevel, buffer, ref offset);
            //Type: SpellEntry Field: 43 Name: ManaPerSecond Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ManaPerSecond, buffer, ref offset);
            //Type: SpellEntry Field: 44 Name: ManaPerSecondPerLevel Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ManaPerSecondPerLevel, buffer, ref offset);
            //Type: SpellEntry Field: 45 Name: RangeIndex Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.RangeIndex, buffer, ref offset);
            //Type: SpellEntry Field: 46 Name: Speed Type: Single;
            GenericTypePrimitiveSerializerStrategy<Single>.Instance.Write(value.Speed, buffer, ref offset);
            //Type: SpellEntry Field: 47 Name: ModalNextSpell Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ModalNextSpell, buffer, ref offset);
            //Type: SpellEntry Field: 48 Name: StackAmount Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.StackAmount, buffer, ref offset);
            //Type: SpellEntry Field: 49 Name: ReagentsRequired Type: RequiredReagentData;
            RequiredReagentData_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.ReagentsRequired, buffer, ref offset);
            //Type: SpellEntry Field: 52 Name: EquippedItemClass Type: ItemClassType;
            GenericPrimitiveEnumTypeSerializerStrategy<ItemClassType, Int32>.Instance.Write(value.EquippedItemClass, buffer, ref offset);
            //Type: SpellEntry Field: 53 Name: EquippedItemSubClassMask Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.EquippedItemSubClassMask, buffer, ref offset);
            //Type: SpellEntry Field: 54 Name: EquippedItemInventoryTypeMask Type: InventoryTypeMask;
            GenericPrimitiveEnumTypeSerializerStrategy<InventoryTypeMask, Int32>.Instance.Write(value.EquippedItemInventoryTypeMask, buffer, ref offset);
            //Type: SpellEntry Field: 55 Name: SpellEffectInformation Type: SpellEffectData;
            SpellEffectData_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.SpellEffectInformation, buffer, ref offset);
            //Type: SpellEntry Field: 75 Name: SpellVisual Type: SpellVisualData;
            SpellVisualData_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.SpellVisual, buffer, ref offset);
            //Type: SpellEntry Field: 76 Name: SpellIconID Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.SpellIconID, buffer, ref offset);
            //Type: SpellEntry Field: 77 Name: ActiveIconID Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ActiveIconID, buffer, ref offset);
            //Type: SpellEntry Field: 78 Name: SpellPriority Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.SpellPriority, buffer, ref offset);
            //Type: SpellEntry Field: 79 Name: SpellName Type: LocalizedStringDBC;
            LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.SpellName, buffer, ref offset);
            //Type: SpellEntry Field: 81 Name: Rank Type: LocalizedStringDBC;
            LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.Rank, buffer, ref offset);
            //Type: SpellEntry Field: 83 Name: Description Type: LocalizedStringDBC;
            LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.Description, buffer, ref offset);
            //Type: SpellEntry Field: 85 Name: ToolTip Type: LocalizedStringDBC;
            LocalizedStringDBC_String_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.ToolTip, buffer, ref offset);
            //Type: SpellEntry Field: 87 Name: ManaCostPercentage Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.ManaCostPercentage, buffer, ref offset);
            //Type: SpellEntry Field: 88 Name: StartRecoveryCategory Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.StartRecoveryCategory, buffer, ref offset);
            //Type: SpellEntry Field: 89 Name: StartRecoveryTime Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.StartRecoveryTime, buffer, ref offset);
            //Type: SpellEntry Field: 90 Name: MaxTargetLevel Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.MaxTargetLevel, buffer, ref offset);
            //Type: SpellEntry Field: 91 Name: SpellFamilyName Type: SpellFamilyName;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellFamilyName, Int32>.Instance.Write(value.SpellFamilyName, buffer, ref offset);
            //Type: SpellEntry Field: 92 Name: SpellFamilyFlags Type: Flags96;
            Flags96_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.SpellFamilyFlags, buffer, ref offset);
            //Type: SpellEntry Field: 93 Name: MaxAffectedTargets Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.MaxAffectedTargets, buffer, ref offset);
            //Type: SpellEntry Field: 94 Name: DmgClass Type: SpellDamageClassType;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellDamageClassType, Int32>.Instance.Write(value.DmgClass, buffer, ref offset);
            //Type: SpellEntry Field: 95 Name: PreventionType Type: SpellPreventionType;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellPreventionType, Int32>.Instance.Write(value.PreventionType, buffer, ref offset);
            //Type: SpellEntry Field: 96 Name: StanceBarOrder Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.StanceBarOrder, buffer, ref offset);
            //Type: SpellEntry Field: 97 Name: DmgMultiplier Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.DmgMultiplier, buffer, ref offset);
            //Type: SpellEntry Field: 98 Name: MinFactionId Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.MinFactionId, buffer, ref offset);
            //Type: SpellEntry Field: 99 Name: MinReputation Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.MinReputation, buffer, ref offset);
            //Type: SpellEntry Field: 100 Name: RequiredAuraVision Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.RequiredAuraVision, buffer, ref offset);
            //Type: SpellEntry Field: 101 Name: TotemCategory Type: SpellTotemDataChunk;
            SpellTotemDataChunk_UInt32_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.TotemCategory, buffer, ref offset);
            //Type: SpellEntry Field: 102 Name: AreaGroupId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.AreaGroupId, buffer, ref offset);
            //Type: SpellEntry Field: 103 Name: SchoolMask Type: SpellSchoolMask;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellSchoolMask, Int32>.Instance.Write(value.SchoolMask, buffer, ref offset);
            //Type: SpellEntry Field: 104 Name: RuneCostID Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.RuneCostID, buffer, ref offset);
            //Type: SpellEntry Field: 105 Name: SpellMissileID Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.SpellMissileID, buffer, ref offset);
            //Type: SpellEntry Field: 106 Name: PowerDisplayId Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.PowerDisplayId, buffer, ref offset);
            //Type: SpellEntry Field: 107 Name: DamageCoeficient Type: SpellEffectDataChunk;
            SpellEffectDataChunk_Single_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.DamageCoeficient, buffer, ref offset);
            //Type: SpellEntry Field: 108 Name: SpellDescriptionVariableID Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.SpellDescriptionVariableID, buffer, ref offset);
            //Type: SpellEntry Field: 109 Name: SpellDifficultyId Type: UInt32;
            GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.SpellDifficultyId, buffer, ref offset);
        }
    }
}