using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="SpellEffectDataChunk<SpellEffect>"/>
    /// </summary>
    public sealed partial class SpellEffectDataChunk_SpellEffect_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<SpellEffectDataChunk_SpellEffect_AutoGeneratedTemplateSerializerStrategy, SpellEffectDataChunk<SpellEffect>>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(SpellEffectDataChunk<SpellEffect> value, Span<byte> buffer, ref int offset)
        {
            //Type: SpellEffectDataChunk Field: 1 Name: Effect1 Type: SpellEffect;
            value.Effect1 = GenericPrimitiveEnumTypeSerializerStrategy<SpellEffect, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEffectDataChunk Field: 2 Name: Effect2 Type: SpellEffect;
            value.Effect2 = GenericPrimitiveEnumTypeSerializerStrategy<SpellEffect, Int32>.Instance.Read(buffer, ref offset);
            //Type: SpellEffectDataChunk Field: 3 Name: Effect3 Type: SpellEffect;
            value.Effect3 = GenericPrimitiveEnumTypeSerializerStrategy<SpellEffect, Int32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(SpellEffectDataChunk<SpellEffect> value, Span<byte> buffer, ref int offset)
        {
            //Type: SpellEffectDataChunk Field: 1 Name: Effect1 Type: SpellEffect;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellEffect, Int32>.Instance.Write(value.Effect1, buffer, ref offset);
            //Type: SpellEffectDataChunk Field: 2 Name: Effect2 Type: SpellEffect;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellEffect, Int32>.Instance.Write(value.Effect2, buffer, ref offset);
            //Type: SpellEffectDataChunk Field: 3 Name: Effect3 Type: SpellEffect;
            GenericPrimitiveEnumTypeSerializerStrategy<SpellEffect, Int32>.Instance.Write(value.Effect3, buffer, ref offset);
        }
    }
}