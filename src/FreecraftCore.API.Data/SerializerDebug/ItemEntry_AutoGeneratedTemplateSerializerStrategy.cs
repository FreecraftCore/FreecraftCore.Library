using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="ItemEntry"/>
    /// </summary>
    public sealed partial class ItemEntry_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<ItemEntry_AutoGeneratedTemplateSerializerStrategy, ItemEntry>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(ItemEntry value, Span<byte> buffer, ref int offset)
        {
            //Type: ItemEntry Field: 1 Name: ItemId Type: Int32;
            value.ItemId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemEntry Field: 2 Name: ItemClassId Type: Int32;
            value.ItemClassId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemEntry Field: 3 Name: ItemSubClassId Type: Int32;
            value.ItemSubClassId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemEntry Field: 4 Name: SoundOverride Type: Int32;
            value.SoundOverride = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemEntry Field: 5 Name: MaterialId Type: Int32;
            value.MaterialId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemEntry Field: 6 Name: ItemDisplayId Type: Int32;
            value.ItemDisplayId = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemEntry Field: 7 Name: InventorySlotType Type: InventoryType;
            value.InventorySlotType = GenericPrimitiveEnumTypeSerializerStrategy<InventoryType, Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemEntry Field: 8 Name: SheathType Type: Int32;
            value.SheathType = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(ItemEntry value, Span<byte> buffer, ref int offset)
        {
            //Type: ItemEntry Field: 1 Name: ItemId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.ItemId, buffer, ref offset);
            //Type: ItemEntry Field: 2 Name: ItemClassId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.ItemClassId, buffer, ref offset);
            //Type: ItemEntry Field: 3 Name: ItemSubClassId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.ItemSubClassId, buffer, ref offset);
            //Type: ItemEntry Field: 4 Name: SoundOverride Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.SoundOverride, buffer, ref offset);
            //Type: ItemEntry Field: 5 Name: MaterialId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.MaterialId, buffer, ref offset);
            //Type: ItemEntry Field: 6 Name: ItemDisplayId Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.ItemDisplayId, buffer, ref offset);
            //Type: ItemEntry Field: 7 Name: InventorySlotType Type: InventoryType;
            GenericPrimitiveEnumTypeSerializerStrategy<InventoryType, Int32>.Instance.Write(value.InventorySlotType, buffer, ref offset);
            //Type: ItemEntry Field: 8 Name: SheathType Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.SheathType, buffer, ref offset);
        }
    }
}