using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="NetworkChatMessageFooter"/>
    /// </summary>
    public sealed partial class NetworkChatMessageFooter_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<NetworkChatMessageFooter_AutoGeneratedTemplateSerializerStrategy, NetworkChatMessageFooter>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(NetworkChatMessageFooter value, Span<byte> buffer, ref int offset)
        {
            //Type: NetworkChatMessageFooter Field: 1 Name: MessageText Type: String;
            value.MessageText = LengthPrefixedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy, Int32>.Instance.Read(buffer, ref offset);
            //Type: NetworkChatMessageFooter Field: 2 Name: Tag Type: ChatStateTag;
            value.Tag = GenericPrimitiveEnumTypeSerializerStrategy<ChatStateTag, Byte>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(NetworkChatMessageFooter value, Span<byte> buffer, ref int offset)
        {
            //Type: NetworkChatMessageFooter Field: 1 Name: MessageText Type: String;
            LengthPrefixedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy, Int32>.Instance.Write(value.MessageText, buffer, ref offset);
            //Type: NetworkChatMessageFooter Field: 2 Name: Tag Type: ChatStateTag;
            GenericPrimitiveEnumTypeSerializerStrategy<ChatStateTag, Byte>.Instance.Write(value.Tag, buffer, ref offset);
        }
    }
}