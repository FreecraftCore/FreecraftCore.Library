using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="ItemSocketInfo"/>
    /// </summary>
    public sealed partial class ItemSocketInfo_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<ItemSocketInfo_AutoGeneratedTemplateSerializerStrategy, ItemSocketInfo>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(ItemSocketInfo value, Span<byte> buffer, ref int offset)
        {
            //Type: ItemSocketInfo Field: 1 Name: Sockets Type: SocketEntry[];
            value.Sockets = FixedSizeComplexArrayTypeSerializerStrategy<SocketEntry_AutoGeneratedTemplateSerializerStrategy, SocketEntry, StaticTypedNumeric_Int32_3>.Instance.Read(buffer, ref offset);
            //Type: ItemSocketInfo Field: 2 Name: SocketBonus Type: Int32;
            value.SocketBonus = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: ItemSocketInfo Field: 3 Name: GemProperties Type: Int32;
            value.GemProperties = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(ItemSocketInfo value, Span<byte> buffer, ref int offset)
        {
            //Type: ItemSocketInfo Field: 1 Name: Sockets Type: SocketEntry[];
            FixedSizeComplexArrayTypeSerializerStrategy<SocketEntry_AutoGeneratedTemplateSerializerStrategy, SocketEntry, StaticTypedNumeric_Int32_3>.Instance.Write(value.Sockets, buffer, ref offset);
            //Type: ItemSocketInfo Field: 2 Name: SocketBonus Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.SocketBonus, buffer, ref offset);
            //Type: ItemSocketInfo Field: 3 Name: GemProperties Type: Int32;
            GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.GemProperties, buffer, ref offset);
        }
        private sealed class StaticTypedNumeric_Int32_3 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 3; }
    }
}