using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;
namespace FreecraftCore
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class ObjectUpdateBlock : IWireMessage<ObjectUpdateBlock>
    {
        public virtual Type SerializableType => typeof(ObjectUpdateBlock);
        public virtual ObjectUpdateBlock Read(Span<byte> buffer, ref int offset)
        {
            ObjectUpdateBlock_AutoGeneratedTemplateSerializerStrategy.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public virtual void Write(ObjectUpdateBlock value, Span<byte> buffer, ref int offset)
        {
            ObjectUpdateBlock_AutoGeneratedTemplateSerializerStrategy.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="ObjectUpdateBlock"/>
    /// </summary>
    public sealed partial class ObjectUpdateBlock_AutoGeneratedTemplateSerializerStrategy
        : BasePolymorphicAutoGeneratedSerializerStrategy<ObjectUpdateBlock_AutoGeneratedTemplateSerializerStrategy, ObjectUpdateBlock, Byte>
    {
        protected override ObjectUpdateBlock CreateType(int key)
        {
            switch (key)
            {
                case 3:
                    return new ObjectUpdateCreateObject2Block();
                case 1:
                    return new ObjectUpdateMovementBlock();
                case 2:
                    return new ObjectUpdateCreateObject1Block();
                case 0:
                    return new ObjectUpdateValuesObjectBlock();
                case 5:
                    return new ObjectUpdateNearObjectsBlock();
                case 4:
                    return new ObjectUpdateDestroyObjectBlock();
                default:
                    throw new NotImplementedException($"Encountered unimplemented sub-type for Type: {nameof(ObjectUpdateBlock)} with Key: {key}");
            }
        }
    }
}