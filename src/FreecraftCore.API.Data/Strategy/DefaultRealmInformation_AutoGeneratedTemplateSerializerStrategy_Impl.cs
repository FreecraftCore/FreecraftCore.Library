using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;
namespace FreecraftCore
{
    [AutoGeneratedWireMessageImplementationAttribute]
    public partial class DefaultRealmInformation : IWireMessage<DefaultRealmInformation>
    {
        public virtual Type SerializableType => typeof(DefaultRealmInformation);
        public virtual DefaultRealmInformation Read(Span<byte> buffer, ref int offset)
        {
            DefaultRealmInformation_AutoGeneratedTemplateSerializerStrategy.Instance.InternalRead(this, buffer, ref offset);
            return this;
        }
        public virtual void Write(DefaultRealmInformation value, Span<byte> buffer, ref int offset)
        {
            DefaultRealmInformation_AutoGeneratedTemplateSerializerStrategy.Instance.InternalWrite(this, buffer, ref offset);
        }
    }
}

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="DefaultRealmInformation"/>
    /// </summary>
    public sealed partial class DefaultRealmInformation_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<DefaultRealmInformation_AutoGeneratedTemplateSerializerStrategy, DefaultRealmInformation>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(DefaultRealmInformation value, Span<byte> buffer, ref int offset)
        {
            //Type: DefaultRealmInformation Field: 1 Name: Flags Type: RealmFlags;
            value.Flags = InternalEnumExtensions.Parse<RealmFlags>(TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Read(buffer, ref offset), true);
            //Type: DefaultRealmInformation Field: 2 Name: RealmString Type: String;
            value.RealmString = TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Read(buffer, ref offset);
            //Type: DefaultRealmInformation Field: 3 Name: RealmAddress Type: RealmEndpoint;
            value.RealmAddress = RealmEndpoint_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: DefaultRealmInformation Field: 4 Name: PopulationLevel Type: Single;
            value.PopulationLevel = GenericTypePrimitiveSerializerStrategy<Single>.Instance.Read(buffer, ref offset);
            //Type: DefaultRealmInformation Field: 5 Name: CharacterCount Type: Byte;
            value.CharacterCount = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: DefaultRealmInformation Field: 6 Name: RealmTimeZone Type: Byte;
            value.RealmTimeZone = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: DefaultRealmInformation Field: 7 Name: RealmId Type: Byte;
            value.RealmId = BytePrimitiveSerializerStrategy.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(DefaultRealmInformation value, Span<byte> buffer, ref int offset)
        {
            //Type: DefaultRealmInformation Field: 1 Name: Flags Type: RealmFlags;
            TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Write(value.Flags, buffer, ref offset);
            //Type: DefaultRealmInformation Field: 2 Name: RealmString Type: String;
            TerminatedStringTypeSerializerStrategy<ASCIIStringTypeSerializerStrategy, ASCIIStringTerminatorTypeSerializerStrategy>.Instance.Write(value.RealmString, buffer, ref offset);
            //Type: DefaultRealmInformation Field: 3 Name: RealmAddress Type: RealmEndpoint;
            RealmEndpoint_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.RealmAddress, buffer, ref offset);
            //Type: DefaultRealmInformation Field: 4 Name: PopulationLevel Type: Single;
            GenericTypePrimitiveSerializerStrategy<Single>.Instance.Write(value.PopulationLevel, buffer, ref offset);
            //Type: DefaultRealmInformation Field: 5 Name: CharacterCount Type: Byte;
            BytePrimitiveSerializerStrategy.Instance.Write(value.CharacterCount, buffer, ref offset);
            //Type: DefaultRealmInformation Field: 6 Name: RealmTimeZone Type: Byte;
            BytePrimitiveSerializerStrategy.Instance.Write(value.RealmTimeZone, buffer, ref offset);
            //Type: DefaultRealmInformation Field: 7 Name: RealmId Type: Byte;
            BytePrimitiveSerializerStrategy.Instance.Write(value.RealmId, buffer, ref offset);
        }
    }
}