using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;
using FreecraftCore.Serializer;
using FreecraftCore;

namespace FreecraftCore.Serializer
{
    //THIS CODE IS FOR AUTO-GENERATED SERIALIZERS! DO NOT MODIFY UNLESS YOU KNOW WELL!
    /// <summary>
    /// FreecraftCore.Serializer's AUTO-GENERATED (do not edit) serialization
    /// code for the Type: <see cref="MovementBlockData"/>
    /// </summary>
    public sealed partial class MovementBlockData_AutoGeneratedTemplateSerializerStrategy
        : BaseAutoGeneratedSerializerStrategy<MovementBlockData_AutoGeneratedTemplateSerializerStrategy, MovementBlockData>
    {
        /// <summary>
        /// Auto-generated deserialization/read method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalRead(MovementBlockData value, Span<byte> buffer, ref int offset)
        {
            //Type: MovementBlockData Field: 2 Name: UpdateFlags Type: ObjectUpdateFlags;
            value.UpdateFlags = GenericPrimitiveEnumTypeSerializerStrategy<ObjectUpdateFlags, UInt16>.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 3 Name: MoveInfo Type: MovementInfo;
            if (value.IsLiving)value.MoveInfo = MovementInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 4 Name: MovementSpeeds Type: Single[];
            if (value.IsLiving)value.MovementSpeeds = FixedSizePrimitiveArrayTypeSerializerStrategy<float, StaticTypedNumeric_Int32_9>.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 5 Name: SplineInformation Type: SplineInfo;
            if (value.HasSplineData)value.SplineInformation = SplineInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 6 Name: DeadMovementInformation Type: CorpseInfo;
            if (value.HasCorpseLocation)value.DeadMovementInformation = CorpseInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 7 Name: StationaryObjectMovementInformation Type: StationaryMovementInfo;
            if (value.IsStationaryObject)value.StationaryObjectMovementInformation = StationaryMovementInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 8 Name: Unk1 Type: Int32;
            if (value.HasUnknown1)value.Unk1 = GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 9 Name: LowGuid Type: UInt32;
            if (value.HasLowGuid)value.LowGuid = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 10 Name: Target Type: PackedGuid;
            if (value.IsAttackingTarget)value.Target = CustomPackedGuidTypeSerializer.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 11 Name: UnknownTransportTimer Type: UInt32;
            if (value.HasTransport)value.UnknownTransportTimer = GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 12 Name: VehicleMovementInformation Type: VehicleMovementInfo;
            if (value.IsInVehicle)value.VehicleMovementInformation = VehicleMovementInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Read(buffer, ref offset);
            //Type: MovementBlockData Field: 13 Name: UpdatePackedQuaternion Type: Int64;
            if (value.HasUpdateRotation)value.UpdatePackedQuaternion = GenericTypePrimitiveSerializerStrategy<Int64>.Instance.Read(buffer, ref offset);
        }

        /// <summary>
        /// Auto-generated serialization/write method.
        /// Partial method implemented from shared partial definition.
        /// </summary>
        /// <param name="value">See external doc.</param>
        /// <param name="buffer">See external doc.</param>
        /// <param name="offset">See external doc.</param>
        public override void InternalWrite(MovementBlockData value, Span<byte> buffer, ref int offset)
        {
            //Type: MovementBlockData Field: 2 Name: UpdateFlags Type: ObjectUpdateFlags;
            GenericPrimitiveEnumTypeSerializerStrategy<ObjectUpdateFlags, UInt16>.Instance.Write(value.UpdateFlags, buffer, ref offset);
            //Type: MovementBlockData Field: 3 Name: MoveInfo Type: MovementInfo;
            if (value.IsLiving)MovementInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.MoveInfo, buffer, ref offset);
            //Type: MovementBlockData Field: 4 Name: MovementSpeeds Type: Single[];
            if (value.IsLiving)FixedSizePrimitiveArrayTypeSerializerStrategy<float, StaticTypedNumeric_Int32_9>.Instance.Write(value.MovementSpeeds, buffer, ref offset);
            //Type: MovementBlockData Field: 5 Name: SplineInformation Type: SplineInfo;
            if (value.HasSplineData)SplineInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.SplineInformation, buffer, ref offset);
            //Type: MovementBlockData Field: 6 Name: DeadMovementInformation Type: CorpseInfo;
            if (value.HasCorpseLocation)CorpseInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.DeadMovementInformation, buffer, ref offset);
            //Type: MovementBlockData Field: 7 Name: StationaryObjectMovementInformation Type: StationaryMovementInfo;
            if (value.IsStationaryObject)StationaryMovementInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.StationaryObjectMovementInformation, buffer, ref offset);
            //Type: MovementBlockData Field: 8 Name: Unk1 Type: Int32;
            if (value.HasUnknown1)GenericTypePrimitiveSerializerStrategy<Int32>.Instance.Write(value.Unk1, buffer, ref offset);
            //Type: MovementBlockData Field: 9 Name: LowGuid Type: UInt32;
            if (value.HasLowGuid)GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.LowGuid, buffer, ref offset);
            //Type: MovementBlockData Field: 10 Name: Target Type: PackedGuid;
            if (value.IsAttackingTarget)CustomPackedGuidTypeSerializer.Instance.Write(value.Target, buffer, ref offset);
            //Type: MovementBlockData Field: 11 Name: UnknownTransportTimer Type: UInt32;
            if (value.HasTransport)GenericTypePrimitiveSerializerStrategy<UInt32>.Instance.Write(value.UnknownTransportTimer, buffer, ref offset);
            //Type: MovementBlockData Field: 12 Name: VehicleMovementInformation Type: VehicleMovementInfo;
            if (value.IsInVehicle)VehicleMovementInfo_AutoGeneratedTemplateSerializerStrategy.Instance.Write(value.VehicleMovementInformation, buffer, ref offset);
            //Type: MovementBlockData Field: 13 Name: UpdatePackedQuaternion Type: Int64;
            if (value.HasUpdateRotation)GenericTypePrimitiveSerializerStrategy<Int64>.Instance.Write(value.UpdatePackedQuaternion, buffer, ref offset);
        }
        private sealed class StaticTypedNumeric_Int32_9 : StaticTypedNumeric<Int32> { public sealed override Int32 Value => 9; }
    }
}